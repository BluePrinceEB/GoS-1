{
	"scope": "source.lua - variable.other.lua",

	"completions":
	[
		"lua",

// Folders 
"GOS_DIR",
"SCRIPT_PATH",
"COMMON_PATH",
"SPRITE_PATH",
"SOUNDS_PATH",

// Events
{ "trigger": "OnTick", "contents": 							"OnTick(function() \n  $0\nend)" },
{ "trigger": "OnDraw", "contents": 							"OnDraw(function() \n  $0\nend)" },
{ "trigger": "OnDrawMinimap", "contents": 					"OnDrawMinimap(function() \n  $0\nend)" },
{ "trigger": "OnLoad", "contents": 							"OnLoad(function() \n  $0\nend)" },
{ "trigger": "OnUnLoad", "contents": 						"OnUnLoad(function() \n  $0\nend)" },
{ "trigger": "OnBugSplat", "contents": 						"OnBugSplat(function(ErrorStr) \n  $0\nend)" },
{ "trigger": "OnObjectLoad", "contents": 					"OnObjectLoad(function(Object) \n  $0\nend)" },
{ "trigger": "OnObjectLoop", "contents": 					"OnObjectLoop(function(Object) \n  $0\nend)" },
{ "trigger": "OnCreateObj", "contents": 					"OnCreateObj(function(Object) \n  $0\nend)" },
{ "trigger": "OnDeleteObj", "contents": 					"OnDeleteObj(function(Object) \n  $0\nend)" },
{ "trigger": "OnProcessRecall", "contents": 				"OnProcessRecall(function(unit, recall) \n  $0\nend)" },
{ "trigger": "OnProcessSpell", "contents": 					"OnProcessSpell(function(unit, spell) \n  $0\nend)" },
{ "trigger": "OnProcessSpellCast", "contents": 				"OnProcessSpellCast(function(unit, spell) \n  $0\nend)" },
{ "trigger": "OnProcessSpellAttack", "contents": 			"OnProcessSpellAttack(function(unit, spell) \n  $0\nend)" },
{ "trigger": "OnProcessSpellComplete", "contents": 			"OnProcessSpellComplete(function(unit, spell) \n  $0\nend)" },
{ "trigger": "OnProcessWaypoint", "contents": 			    "OnProcessWaypoint(function(unit, waypoint) \n  $0\nend)" },
{ "trigger": "OnAnimation", "contents": 					"OnAnimation(function(unit, animation) \n  $0\nend)" },
{ "trigger": "OnUpdateBuff", "contents": 					"OnUpdateBuff(function(unit, buff) \n  $0\nend)" },
{ "trigger": "OnRemoveBuff", "contents": 					"OnRemoveBuff(function(unit, buff) \n  $0\nend)" },
{ "trigger": "OnGainVision", "contents": 					"OnGainVision(function(unit) \n  $0\nend)" },
{ "trigger": "OnLoseVision", "contents": 					"OnLoseVision(function(unit) \n  $0\nend)" },
{ "trigger": "OnIssueOrder", "contents": 					"OnIssueOrder(function(order) \n  $0\nend)" },
{ "trigger": "OnSpellCast", "contents": 					"OnSpellCast(function(spell) \n  $0\nend)" },
{ "trigger": "OnDamage", "contents": 					    "OnDamage(function(unit, target, damage) \n  $0\nend)" },
{ "trigger": "OnAggro", "contents": 					    "OnAggro(function(unit, flag) \n  $0\nend)" },
{ "trigger": "OnProcessPacket", "contents": 			    "OnProcessPacket(function(packet) \n  $0\nend)" },

// Slots
"_Q",
"_W",
"_E",
"_R",
"ITEM_1",
"ITEM_2",
"ITEM_3",
"ITEM_4",
"ITEM_5",
"ITEM_6",
"ITEM_7",
"RECALL",
"SUMMONER_1",
"SUMMONER_2",

// SpellState
"READY",
"NOTLEARNED",
"SUPRESSED",
"COOLDOWN",
"NOMANA",
"UNKNOWN",

// ObjectTypes
"Obj_AI_Hero",
"Obj_AI_Minion",
"Obj_AI_Turret",
"Obj_AI_SpawnPoint",
"Obj_AI_Camp",
"Obj_AI_Barracks",
"Obj_AI_LineMissle",
"Obj_AI_Shop",

// MsgTypes
"WM_MOUSEHWHEEL", 
"WM_LBUTTONDOWN", 
"WM_LBUTTONUP", 
"WM_RBUTTONDOWN", 
"WM_RBUTTONUP", 
"WM_MBUTTONDOWN", 
"WM_MBUTTONUP", 
"KEY_DOWN", 
"KEY_UP",

// Resolution
"WINDOW_W",
"WINDOW_H",

// MenuConfig
{ "trigger": "MenuConfig", "contents": 					    "MenuConfig('${1:id}', '${2:name}')" },
{ "trigger": ":Menu", "contents": 					        ":Menu('${1:id}', '${2:name}')" },
{ "trigger": ":Empty", "contents": 					        ":Empty('${1:id}', ${2:size})" },
{ "trigger": ":Boolean", "contents": 					    ":Boolean('${1:id}', '${2:name}', ${3:defaultValue}, ${4:callback}, ${5:forceDefault})" },
{ "trigger": ":KeyBinding", "contents": 					":KeyBinding('${1:id}', '${2:name}', ${3:keyCode}, ${4:isToggle}, ${5:callback}, ${6:forceDefault})" },
{ "trigger": ":Slider", "contents": 					    ":Slider('${1:id}', '${2:name}', ${3:value}, ${4:mix}, ${5:max}, ${6:step}, ${7:callback}, ${8:forceDefault})" },
{ "trigger": ":DropDown", "contents": 					    ":DropDown('${1:id}', '${2:name}', ${3:value}, ${4:dropTable}, ${5:callback}, ${6:forceDefault})" },
{ "trigger": ":ColorPick", "contents": 					    ":ColorPick('${1:id}', '${2:name}', ${3:colorTable}, ${4:callback}, ${5:forceDefault})" },
{ "trigger": ":TargetSelector", "contents": 				":TargetSelector('${1:id}', '${2:name}', ${3:targetSel}, ${4:forceDefault})" },
{ "trigger": "TargetSelector", "contents": 					"TargetSelector(${1:range}, ${2:mode}, ${3:damageType}, ${4:targetSelected}, ${5:enemyTeam})" },

// Vector Class
{ "trigger": "VectorType", "contents": 						"VectorType(${1:v})" },
{ "trigger": "VectorIntersection", "contents": 				"VectorIntersection(${1:a1}, ${2:b1}, ${3:a2}, ${4:b2})" },
{ "trigger": "IsLineSegmentIntersection", "contents": 		"IsLineSegmentIntersection(${1:A}, ${2:B}, ${3:C}, ${4:D})" },
{ "trigger": "LineSegmentIntersection", "contents": 		"LineSegmentIntersection(${1:A}, ${2:B}, ${3:C}, ${4:D})" },
{ "trigger": "VectorDirection", "contents": 				"VectorDirection(${1:v1}, ${2:v2}, ${3:v})" },
{ "trigger": "VectorPointProjectionOnLine", "contents": 	"VectorPointProjectionOnLine(${1:v1}, ${2:v2}, ${3:v})" },
{ "trigger": "Vector", "contents": 							"Vector(${1:x}, ${2:y}, ${3:z})" },
{ "trigger": "dist", "contents": 					        "dist(${1:v})" },
{ "trigger": "rotate", "contents": 					        "rotate(${1:phiX}, ${2:phiY}, ${3:phiZ})" },
{ "trigger": "rotated", "contents": 					    "rotated(${1:phiX}, ${2:phiY}, ${3:phiZ})" },
{ "trigger": "projectOn", "contents": 				        "vector:projectOn(${1:v})" },
{ "trigger": "mirrorOn", "contents": 				        "vector:mirrorOn(${1:v})" },
{ "trigger": "center", "contents": 					        "vector:center(${1:v})" },
{ "trigger": "angleBetween", "contents": 			        "angleBetween(${1:v1}, ${2:v2})" },
{ "trigger": "compare", "contents": 					    "vector:compare(${1:v})" },
"clone()",
"unpack()",
"len2()",
"len()",
"normalize()",
"normalized()",
"crossP()",
"dotP()",
"polar()",
"perpendicular()",
"perpendicular2()",

// Object Class
".name",
".charName",
".dead",
".team",
".valid",
".visible",
".level",
".type",
".pos",
".pos2D",
".x",
".y",
".z",
".distance",
".networkID",
".isInvulnerable",
".isMelee",
".isRanged",
".isMe",
".isStealthed",
".isTaunted",
".isCharmed",
".isFeared",
".isAsleep",
".isNearSight",
".isGhosted",
".isFleeing",
".isPoisoned",
".isSpellShielded",
".isTargetable",
".range",
".boundingRadius",
".cdr",
".health",
".maxHealth",
".mana",
".maxMana",
".hpRegen",
".mpRegen",
".critChance",
".attackSpeed",
".baseAttackSpeed",
".windUp",
".exp",
".lifeSteal",
".spellVamp",
".physReduction",
".magicReduction",
".armorPen",
".magicPen",
".armorPenPercent",
".bonusArmorPenPercent",
".magicPenPercent",
".totalDamage",
".ap",
".damage",
".armor",
".baseArmor",
".magicArmor",
".ms",
".gold",
".shieldAD",
".shieldAP",
".isUnit",
".isHero",
".isMinion",
".isTurret",
".totalGold",
".hpBarPos",
".isRecalling",
".isSpell",
".spellName",
".spellOwner",
".startPos",
".endPos",
".placePos",
".target",
".owner",

// Object Functions
{ "trigger": ":Stop", "contents": 					         ":Stop()" },
{ "trigger": ":Move", "contents": 					         ":Move(${1:x}, ${2:z})" },
{ "trigger": ":Attack", "contents": 					     ":Attack(${1:unit})" },
{ "trigger": ":CastSpell", "contents": 					     ":CastSpell(${1:slot})" },
{ "trigger": ":CastSpell", "contents": 					     ":CastSpell(${1:slot}, ${2:unit})" },
{ "trigger": ":CastSpell", "contents": 					     ":CastSpell(${1:slot}, ${2:x}, ${3:z})" },
{ "trigger": ":HasBuffType", "contents": 					 ":HasBuffType(${1:type})" },
{ "trigger": ":CalcDamage", "contents": 					 ":CalcDamage(${1:unit}, ${2:amount})" },
{ "trigger": ":CalcMagicDamage", "contents": 			     ":CalcMagicDamage(${1:unit}, ${2:amount})" },
{ "trigger": ":GetSpellData", "contents": 					 ":GetSpellData(${1:slot})" },
{ "trigger": ":CanUseSpell", "contents": 					 ":CanUseSpell(${1:slot})" },
{ "trigger": ":getBuff", "contents": 					     ":getBuff(${1:index})" },
{ "trigger": ":GetBuff", "contents": 					     ":GetBuff(${1:index})" },
{ "trigger": ":GetItem", "contents": 					     ":GetItem(${1:slot})" },
{ "trigger": ":DistanceTo", "contents": 					 ":DistanceTo(${1:Object})" },
{ "trigger": ":DistanceTo", "contents": 					 ":DistanceTo(${1:x}, ${2:y}, ${3:z})" },
{ "trigger": ":DistanceTo", "contents": 					 ":DistanceTo(${1:x}, ${2:z})" },
{ "trigger": ":Draw", "contents": 					         ":Draw()" },
{ "trigger": ":Draw", "contents": 					         ":Draw(${1:radius})" },
{ "trigger": ":Draw", "contents": 					         ":Draw(${1:radius}, ${2:color})" },
{ "trigger": ":DrawDmg", "contents": 					     ":DrawDmg(${1:damage})" },
{ "trigger": ":DrawDmg", "contents": 					     ":DrawDmg(${1:damage}, ${2:color})" },
{ "trigger": ":DrawDmg", "contents": 					     ":DrawDmg(${1:damage}, ${2:color}, , ${3:hpoffset})" },
{ "trigger": ":Skin", "contents": 					         ":Skin(${1:id})" },
{ "trigger": ":Model", "contents": 					         ":Model(${1:id}, ${2:modelName})" },

// GetSpellData Struct
".name",
".toggleState",
".ammo",
".ammoCd",
".ammoCurrentCd",
".castT",
".rechargeT",
".ready",
".mana",
".cd",
".displayCd",
".currentCd",
".range",
".level",

// GetItem Struct
".id",
".stack",
".ammo",

// OnProcessRecall struct
"recall.name",
"recall.isStart",
"recall.isFinish",
"recall.passedTime",
"recall.totalTime",

// OnProcessSpell struct
"spell.name",
"spell.windUpTime",
"spell.animationTime",
"spell.castSpeed",
"spell.startPos",
"spell.startPos.x",
"spell.startPos.y",
"spell.startPos.z",
"spell.endPos",
"spell.endPos.x",
"spell.endPos.y",
"spell.endPos.z",
"spell.target",

// OnProcessWaypoint struct
"waypoint.index",
"waypoint.position",
"waypoint.dashspeed",
"waypoint.dashgravity",

// OnUpdateBuff/OnRemoveBuff/GetBuffData struct
"buff.Name",
"buff.Type",
"buff.Count",
"buff.Stacks",
"buff.StartTime",
"buff.ExpireTime",

// OnIssueOrder struct
"order.flag",
"order.position",
"order.target",

// OnSpellCast struct
"spell.spellID",
"spell.targetID",

// OnProcessPacket struct
".header",
".size",
".data",
{ "trigger": ":DecodeF", "contents": 					    ":DecodeF()" },
{ "trigger": ":Decode4", "contents": 					    ":Decode4()" },
{ "trigger": ":Decode2", "contents": 					    ":Decode2()" },
{ "trigger": ":Decode1", "contents": 					    ":Decode1()" },

// GetPredictionForPlayer struct
".HitChance",
".PredPos",
".PredPos.x",
".PredPos.y",
".PredPos.z",

// Globals
"myHero",
"mousePos",
"mapID",
"_VERSION",
{ "trigger": "print", "contents": 							"print('${1:}')" },
{ "trigger": "PrintChat", "contents": 						"PrintChat('${1:}')" },
{ "trigger": "MessageBox", "contents": 						"MessageBox(0,'${1:}',0)" },
{ "trigger": "KeyIsDown", "contents": 						"KeyIsDown(${1:VKcode})" },
{ "trigger": "GetObjectType", "contents": 					"GetObjectType(${1:Object})" },
{ "trigger": "IsObjectAlive", "contents": 					"IsObjectAlive(${1:Object})" },
{ "trigger": "GetObjectName", "contents": 					"GetObjectName(${1:Object})" },
{ "trigger": "GetObjectBaseName", "contents": 			    "GetObjectBaseName(${1:Object})" },
{ "trigger": "IsDead", "contents": 					        "IsDead(${1:Object})" },
{ "trigger": "IsTargetable", "contents": 					"IsTargetable(${1:Object})" },
{ "trigger": "GetNetworkID", "contents": 					"GetNetworkID(${1:Object})" },
{ "trigger": "GetTeam", "contents": 					    "GetTeam(${1:Object})" },
{ "trigger": "GetOrigin", "contents": 					    "GetOrigin(${1:Object})" },
{ "trigger": "GetRange", "contents": 					    "GetRange(${1:Object})" },
{ "trigger": "GetHitBox", "contents": 					    "GetHitBox(${1:Object})" },
{ "trigger": "GetLevel", "contents": 					    "GetLevel(${1:Object})" },
{ "trigger": "GetExperience", "contents": 					"GetExperience(${1:Object})" },
{ "trigger": "IsVisible", "contents": 					    "IsVisible(${1:Object})" },
{ "trigger": "GetMoveSpeed", "contents": 					"GetMoveSpeed(${1:Object})" },
{ "trigger": "GetCurrentHP", "contents": 					"GetCurrentHP(${1:Object})" },
{ "trigger": "GetMaxHP", "contents": 					    "GetMaxHP(${1:Object})" },
{ "trigger": "GetCurrentMana", "contents": 					"GetCurrentMana(${1:Object})" },
{ "trigger": "GetMaxMana", "contents": 					    "GetMaxMana(${1:Object})" },
{ "trigger": "GetDmgShield", "contents": 					"GetDmgShield(${1:Object})" },
{ "trigger": "GetMagicShield", "contents": 					"GetMagicShield(${1:Object})" },
{ "trigger": "IsCampusUp", "contents": 					    "IsCampusUp(${1:Mob})" },
{ "trigger": "GetCDR", "contents": 					        "GetCDR(${1:Object})" },
{ "trigger": "GetArmorPenFlat", "contents": 				"GetArmorPenFlat(${1:Object})" },
{ "trigger": "GetMagicPenFlat", "contents": 				"GetMagicPenFlat(${1:Object})" },
{ "trigger": "GetArmorPenPercent", "contents": 				"GetArmorPenPercent(${1:Object})" },
{ "trigger": "GetMagicPenPercent", "contents": 				"GetMagicPenPercent(${1:Object})" },
{ "trigger": "GetBaseDamage", "contents": 					"GetBaseDamage(${1:Object})" },
{ "trigger": "GetBonusDmg", "contents": 					"GetBonusDmg(${1:Object})" },
{ "trigger": "GetBonusAP", "contents": 					    "GetBonusAP(${1:Object})" },
{ "trigger": "GetLifeSteal", "contents": 					"GetLifeSteal(${1:Object})" },
{ "trigger": "GetSpellVamp", "contents": 					"GetSpellVamp(${1:Object})" },
{ "trigger": "GetAttackSpeed", "contents": 					"GetAttackSpeed(${1:Object})" },
{ "trigger": "GetBaseAttackSpeed", "contents": 				"GetBaseAttackSpeed(${1:Object})" },
{ "trigger": "GetWindUp", "contents": 					    "GetWindUp(${1:Object})" },
{ "trigger": "GetCritChance", "contents": 					"GetCritChance(${1:Object})" },
{ "trigger": "GetArmor", "contents": 					    "GetArmor(${1:Object})" },
{ "trigger": "GetBaseArmor", "contents": 					"GetBaseArmor(${1:Object})" },
{ "trigger": "GetMagicResist", "contents": 					"GetMagicResist(${1:Object})" },
{ "trigger": "GetHPRegen", "contents": 					    "GetHPRegen(${1:Object})" },
{ "trigger": "GetMPRegen", "contents": 					    "GetMPRegen(${1:Object})" },
{ "trigger": "GotBuff", "contents": 					    "GotBuff(${1:Object}, '${2:buff}')" },
{ "trigger": "GetBuffData", "contents": 					"GetBuffData(${1:Object}, '${2:buff}')" },
{ "trigger": "GetBuffCount", "contents": 					"GetBuffCount(${1:Object}, ${2:index})" },
{ "trigger": "GetBuffName", "contents": 					"GetBuffName(${1:Object}, ${2:index})" },
{ "trigger": "GetBuffType", "contents": 					"GetBuffType(${1:Object}, ${2:index})" },
{ "trigger": "GetBuffStacks", "contents": 					"GetBuffStacks(${1:Object}, ${2:index})" },
{ "trigger": "GetBuffStartTime", "contents": 				"GetBuffStartTime(${1:Object}, ${2:index})" },
{ "trigger": "GetBuffExpireTime", "contents": 				"GetBuffExpireTime(${1:Object}, ${2:index})" },
{ "trigger": "GetBuffTypeList", "contents": 				"GetBuffTypeList()" },
{ "trigger": "GetBuffTypeToString", "contents": 			"GetBuffTypeToString(${1:number})" },
{ "trigger": "GetItemSlot", "contents": 					"GetItemSlot(${1:Object}, ${2:itemID})" },
{ "trigger": "GetCastLevel", "contents": 					"GetCastLevel(${1:Object}, ${2:slot})" },
{ "trigger": "GetCastRange", "contents": 					"GetCastRange(${1:Object}, ${2:slot})" },
{ "trigger": "GetCastName", "contents": 					"GetCastName(${1:Object}, ${2:slot})" },
{ "trigger": "GetCastMana", "contents": 					"GetCastMana(${1:Object}, ${2:slot}, ${3:level})" },
{ "trigger": "GetCastCooldown", "contents": 				"GetCastCooldown(${1:Object}, ${2:slot}, ${3:level})" },
{ "trigger": "IsImmune", "contents": 					    "IsImmune(${1:target}, ${2:Object})" },
{ "trigger": "GetLatency", "contents": 					    "GetLatency()" },
{ "trigger": "GetFPS", "contents": 					        "GetFPS()" },
{ "trigger": "GetTickCount", "contents": 					"GetTickCount()" },
{ "trigger": "CastTargetSpell", "contents": 				"CastTargetSpell(${1:target}, ${2:slot})" },
{ "trigger": "CastSpell", "contents": 					    "CastSpell(${1:slot})" },
{ "trigger": "CastSkillShot", "contents": 					"CastSkillShot(${1:slot}, ${2:pos})" },
{ "trigger": "CastSkillShot", "contents": 					"CastSkillShot(${1:slot}, ${2:x}, ${3:x}, ${4:x})" },
{ "trigger": "CastSkillShot2", "contents": 					"CastSkillShot2(${1:slot}, ${2:pos})" },
{ "trigger": "CastSkillShot2", "contents": 					"CastSkillShot2(${1:slot}, ${2:x}, ${3:x}, ${4:x})" },
{ "trigger": "CastSkillShot3", "contents": 					"CastSkillShot3(${1:slot}, ${2:startPos}, ${2:endPos})" },
{ "trigger": "LevelSpell", "contents": 					    "LevelSpell(${1:slot})" },
{ "trigger": "MoveToXYZ", "contents": 					    "MoveToXYZ(${1:x}, (${2:y}, ${3:z})" },
{ "trigger": "HoldPosition", "contents": 					"HoldPosition()" },
{ "trigger": "AttackUnit", "contents": 					    "AttackUnit(${1:Object})" },
{ "trigger": "BuyItem", "contents": 					    "BuyItem(${1:itemID})" },
{ "trigger": "DrawCircle", "contents": 					    "DrawCircle(${1:pos}, ${2:radius}, ${3:width}, ${4:quality}, ${5:color})" },
{ "trigger": "DrawCircle", "contents": 					    "DrawCircle(${1:x}, , ${2:y}, ${3:z}, ${4:radius}, ${5:width}, ${6:quality}, ${7:color})" },
{ "trigger": "WorldToScreen", "contents": 					"WorldToScreen(${1:visfix}, ${2:pos})" },
{ "trigger": "WorldToScreen", "contents": 					"WorldToScreen(${1:visfix}, ${2:x}, ${3:y}, ${4:z})" },
{ "trigger": "WorldToMinimap", "contents": 					"WorldToMinimap(${1:pos})" },
{ "trigger": "WorldToMinimap", "contents": 					"WorldToMinimap(${1:x}, ${2:y}, ${3:z})" },
{ "trigger": "DrawText", "contents": 					    "DrawText(${1:text}, ${2:size}, ${3:x}, ${4:y}, ${5:color})" },
{ "trigger": "DrawTextSmall", "contents": 					"DrawTextSmall(${1:text}, ${2:x}, ${3:y}, ${4:color})" },
{ "trigger": "FillRect", "contents": 					    "FillRect(${1:x}, ${2:y}, ${3:width}, ${4:height}, ${5:color})" },
{ "trigger": "DrawDmgOverHpBar", "contents": 				"DrawDmgOverHpBar(${1:Object}, ${2:currentHP}, ${3:adDMG}, ${4:apDMG}, ${5:color})" },
{ "trigger": "GetMousePos", "contents": 					"GetMousePos()" },
{ "trigger": "GetCurrentTarget", "contents": 				"GetCurrentTarget()" },
{ "trigger": "GetMyHero", "contents": 					    "GetMyHero()" },
{ "trigger": "ARGB", "contents": 					        "ARGB(${1:opacity}, ${2:red}, ${3:green}, ${4:blue})" },
{ "trigger": "GetGameTimer", "contents": 					"GetGameTimer()" },
{ "trigger": "GetGameVersion", "contents": 					"GetGameVersion()" },
{ "trigger": "GetGameTarget", "contents": 					"GetGameTarget()" },
{ "trigger": "IsChatOpened", "contents": 					"IsChatOpened()" },
{ "trigger": "IsGameOnTop", "contents": 					"IsGameOnTop()" },
{ "trigger": "IsGoSHumanizerActive", "contents": 			"IsGoSHumanizerActive()" },
{ "trigger": "GetItemID", "contents": 					    "GetItemID(${1:Object}, ${2:slot})" },
{ "trigger": "GetItemAmmo", "contents": 					"GetItemAmmo(${1:Object}, ${2:slot})" },
{ "trigger": "GetItemStack", "contents": 					"GetItemStack(${1:Object}, ${2:slot})" },
{ "trigger": "CastEmote", "contents": 					    "CastEmote(${1:ID})" },
{ "trigger": "GetDamagePrediction", "contents": 			"GetDamagePrediction(${1:Object}, ${2:delta})" },
{ "trigger": "GetObjectSpellName", "contents": 				"GetObjectSpellName(${1:Object})" },
{ "trigger": "GetObjectSpellOwner", "contents": 			"GetObjectSpellOwner(${1:Object})" },
{ "trigger": "GetObjectSpellStartPos", "contents": 			"GetObjectSpellStartPos(${1:Object})" },
{ "trigger": "GetObjectSpellEndPos", "contents": 			"GetObjectSpellEndPos(${1:Object})" },
{ "trigger": "GetObjectSpellModelName", "contents": 		"GetObjectSpellModelName(${1:Object})" },
{ "trigger": "HeroSkinChanger", "contents": 				"HeroSkinChanger(${1:Object}, ${2:ID})" },
{ "trigger": "ModelChanger", "contents": 					"ModelChanger(${1:Object}, ${2:ID}, ${3:modelName})" },
{ "trigger": "GetLevelPoints", "contents": 					"GetLevelPoints(${1:Object})" },
{ "trigger": "Interact", "contents": 				     	"Interact(${1:Object})" },
{ "trigger": "CreateSpriteFromFile", "contents": 		    "CreateSpriteFromFile('${1:path}', ${2:scale})" },
{ "trigger": "ReleaseSprite", "contents": 					"ReleaseSprite(${1:spriteIndex})" },
{ "trigger": "DrawSprite", "contents": 					    "DrawSprite(${1:spriteIndex}, ${2:x}, ${3:y}, ${4:spriteX}, ${5:spriteY}, ${6:width}; ${7:height}, ${8:color})" },
{ "trigger": "BlockInput", "contents": 					    "BlockInput(${1:bool})" },
{ "trigger": "BlockF7OrbWalk", "contents": 					"BlockF7OrbWalk(${1:bool})" },
{ "trigger": "BlockF7Dodge", "contents": 					"BlockF7Dodge(${1:bool})" },
{ "trigger": "BlockOrder", "contents": 					    "BlockOrder()" },
{ "trigger": "BlockCast", "contents": 					    "BlockCast()" },
{ "trigger": "GetUser", "contents": 					    "GetUser()" },
{ "trigger": "GetGroup", "contents": 					    "GetGroup()" },
{ "trigger": "GetTextRect", "contents": 					"GetTextRect(${1:text}, ${2:size}, ${3:x}, ${4:y})" },
{ "trigger": "DrawLine", "contents": 						"DrawLine(${1:startX}, ${2:startY}, ${3:endX}, ${4:endY}, ${5:size}, ${6:ARGB})" },
{ "trigger": "DrawRectangle", "contents": 					"DrawRectangle(${1:x}, ${2:y}, ${3:width}, ${4:height}, ${5:ARGB})" },
{ "trigger": "DrawRectangleOutline", "contents": 			"DrawRectangleOutline(${1:x}, ${2:y}, ${3:width}, ${4:height}, ${5:color}, ${6:borderWidth})" },
{ "trigger": "DrawLineBorder3D", "contents": 				"DrawLineBorder3D(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:size}, ${8:color}, ${9:width})" },
{ "trigger": "DrawLineBorder", "contents": 					"DrawLineBorder(${1:x1}, ${2:y1}, ${3:x2}, ${4:y2}, ${5:size}, ${6:color}, ${7:width})" },
{ "trigger": "DrawCircle2D", "contents": 					"DrawCircle2D(${1:x}, ${2:y}, ${3:radius},${4:width},${5:color},${6:quality})" },
{ "trigger": "DrawCircle3D", "contents": 					"DrawCircle3D(${1:x}, ${2:y}, ${3:z},${4:radius},${5:width},${6:color},${7:quality})" },
{ "trigger": "DrawLine3D", "contents": 						"DrawLine3D(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2},${5:y2},${6:z2},${7:width},${8:color})" },
{ "trigger": "DrawLines3D", "contents": 					"DrawLines3D(${1:points}, ${2:width}, ${3:color})" },
{ "trigger": "DrawTextA", "contents": 						"DrawTextA(${1:text}, ${2:size}, ${3:x}, ${4:y}, ${5:color}, ${6:halign}, ${7:valign})" },
{ "trigger": "DrawText3D", "contents": 						"DrawText3D(${1:text}, ${2:x}, ${3:y}, ${4:z}, ${5:size}, ${6:color}, ${7:center})" },
{ "trigger": "GetCursorPos", "contents": 					"GetCursorPos()" },
{ "trigger": "SetCursorPos", "contents": 					"SetCursorPos(${1:x}, ${2:y})" },
{ "trigger": "GetResolution", "contents": 					"GetResolution()" },
{ "trigger": "GetDistanceSqr", "contents": 					"GetDistanceSqr(${1:p1}, ${2:p2})" },
{ "trigger": "GetDistance", "contents": 					"GetDistance(${1:p1}, ${2:p2})" },
{ "trigger": "GetEnemyHeroes", "contents": 					"GetEnemyHeroes()" },
{ "trigger": "GetAllyHeroes", "contents": 					"GetAllyHeroes()" },
{ "trigger": "PlaySound", "contents": 					    "PlaySound('${1:path}')" },
{ "trigger": "StopSound", "contents": 					    "StopSound('${1:path}')" },
{ "trigger": "GetSave", "contents": 						"GetSave('${1:name}')" },
{ "trigger": "CreateDir", "contents": 				        "CreateDir('${1:path}')" },
{ "trigger": "DirExists", "contents": 					    "DirExists('${1:path}')" },
{ "trigger": "ReadFile", "contents": 						"ReadFile('${1:path}')" },
{ "trigger": "WriteFile", "contents": 						"WriteFile(${1:text}, '${2:path}', ${3:mode})" },
{ "trigger": "FileExist", "contents": 						"FileExist('${1:path}')" },
{ "trigger": "DeleteFile", "contents": 						"DeleteFile('${1:path}')" },
{ "trigger": "GetFileSize", "contents": 					"GetFileSize('${1:path}')" },
{ "trigger": "DelayAction", "contents": 					"DelayAction(${1:function}, ${2:delay})" },
{ "trigger": "EnableOverlay", "contents": 					"EnableOverlay()" },
{ "trigger": "DisableOverlay", "contents":					"DisableOverlay()" },
{ "trigger": "CursorIsUnder", "contents": 					"CursorIsUnder(${1:x}, ${2:y}, ${3:sizeX}, ${4:sizeY})" },
{ "trigger": "ValidTarget", "contents": 					"ValidTarget(${1:Object}, ${2:range}, ${3:enemyTeam})" },
{ "trigger": "BuffIsValid", "contents": 					"BuffIsValid(${1:buff})" },
{ "trigger": "UnitHaveBuff", "contents": 					"UnitHaveBuff(${1:unit}, ${2:buffName})" },
{ "trigger": "CountEnemyHeroInRange", "contents": 			"CountEnemyHeroInRange(${1:range}, ${2:Object})" },

	]
}